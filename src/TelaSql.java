
import static com.itextpdf.text.Annotation.URL;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import static com.itextpdf.text.ElementTags.URL;
import com.itextpdf.text.Font;
import com.itextpdf.text.Font.FontFamily;
import com.itextpdf.text.Image;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import static com.itextpdf.text.html.HtmlTags.URL;
import static com.itextpdf.text.pdf.PdfName.URL;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.List;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Objects;
import java.util.concurrent.TimeUnit;
import javax.swing.GroupLayout;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileSystemView;
import org.joda.time.DateTime;
import org.joda.time.Days;
import org.joda.time.format.DateTimeFormat;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author gabri
 */
public class TelaSql extends javax.swing.JFrame {

    /**
     * Creates new form TelaSql
     */
    public TelaSql() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        btnAdd = new javax.swing.JButton();
        txtNome = new javax.swing.JTextField();
        txtRg = new javax.swing.JTextField();
        txtDataCirur = new javax.swing.JTextField();
        txtDataRetorno = new javax.swing.JTextField();
        txtProced = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        comboReceita = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtObserv = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        comboAnest = new javax.swing.JComboBox();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        btnLista = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtDataCirurGerar = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        gerarAnest = new javax.swing.JComboBox();
        btnReceitas = new javax.swing.JButton();
        btnAtestados = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        txtTempoAtestado = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtPatch = new javax.swing.JTextField();
        btnPatch = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jPanel4 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        btnProcurar = new javax.swing.JButton();
        txtProcRg = new javax.swing.JTextField();
        txtProcDataCirur = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel15 = new javax.swing.JLabel();
        txtEdNome = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtEdRg = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtEdDataCirur = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txtEdDataRetorno = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        txtEdProced = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        txtEdObserv = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        comboEdReceita = new javax.swing.JComboBox();
        jLabel22 = new javax.swing.JLabel();
        comboEdAnest = new javax.swing.JComboBox();
        btnSalvar = new javax.swing.JButton();
        btnDeletar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Rceitas - Plastica Ocular - UNESP");

        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        btnAdd.setText("Adicionar");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        jLabel1.setText("Nome");

        jLabel2.setText("RG");

        jLabel3.setText("Data da Cirurgia");

        jLabel4.setText("Data do Retorno");

        jLabel5.setText("Procedimento");

        comboReceita.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Colírio", "Pomada", "Colírio + Pomada", "Pterígio", "DCR" }));
        comboReceita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboReceitaActionPerformed(evt);
            }
        });

        jLabel6.setText("Tipo de Receita");

        jLabel8.setText("Observações");

        jLabel10.setText("Tipo de Anestesia");

        comboAnest.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Local", "Geral", "Pequenas Cirurgias" }));

        jLabel23.setForeground(new java.awt.Color(153, 153, 153));
        jLabel23.setText("(dd/mm/aaaa)");

        jLabel24.setForeground(new java.awt.Color(153, 153, 153));
        jLabel24.setText("(dd/mm/aaaa)");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel8)
                    .addComponent(jLabel6)
                    .addComponent(jLabel10)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(10, 10, 10)
                            .addComponent(jLabel23))
                        .addComponent(jLabel3))
                    .addComponent(jLabel24))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtProced)
                    .addComponent(txtDataRetorno)
                    .addComponent(txtObserv)
                    .addComponent(txtNome)
                    .addComponent(txtRg)
                    .addComponent(txtDataCirur)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(comboAnest, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(comboReceita, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 183, Short.MAX_VALUE)))
                .addGap(47, 47, 47))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAdd)
                .addGap(108, 108, 108))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDataCirur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(1, 1, 1)
                .addComponent(jLabel23)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDataRetorno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(1, 1, 1)
                .addComponent(jLabel24)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtProced, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtObserv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(comboReceita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(comboAnest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(btnAdd)
                .addGap(53, 53, 53))
        );

        jTabbedPane1.addTab("Adicionar Pacientes", jPanel1);

        btnLista.setText("Gerar Lista de Cirurgias");
        btnLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListaActionPerformed(evt);
            }
        });

        jLabel7.setText("Data das Cirurgias (dd/mm/aaa)");

        jLabel9.setText("Tipo de Anestesia");

        gerarAnest.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Local", "Geral", "Pequenas Cirurgias" }));

        btnReceitas.setText("Gerar Receitas");
        btnReceitas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReceitasActionPerformed(evt);
            }
        });

        btnAtestados.setText("Gerar Atestados");
        btnAtestados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtestadosActionPerformed(evt);
            }
        });

        jLabel11.setText("Tempo de Atestado (dias)");

        txtTempoAtestado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTempoAtestadoActionPerformed(evt);
            }
        });

        jLabel14.setText("Salvar em:");

        txtPatch.setToolTipText("");
        txtPatch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatchActionPerformed(evt);
            }
        });

        btnPatch.setText("Selecionar Pasta");
        btnPatch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPatchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtPatch, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPatch)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnAtestados, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnLista, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel11))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtDataCirurGerar, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                                    .addComponent(gerarAnest, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtTempoAtestado))
                                .addContainerGap(171, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnReceitas, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(54, 54, 54))))))
            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jSeparator3)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txtPatch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPatch))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtDataCirurGerar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(gerarAnest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLista)
                    .addComponent(btnReceitas))
                .addGap(18, 18, 18)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtTempoAtestado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnAtestados)
                .addGap(158, 158, 158))
        );

        jTabbedPane1.addTab("Gerar Receitas", jPanel3);

        jLabel12.setText("RG");

        jLabel13.setText("Data da Cirurgia");

        btnProcurar.setText("Procurar");
        btnProcurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcurarActionPerformed(evt);
            }
        });

        jLabel15.setText("Nome");

        txtEdNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEdNomeActionPerformed(evt);
            }
        });

        jLabel16.setText("RG");

        jLabel17.setText("Data da Cirurgia");

        jLabel18.setText("Data do Retorno");

        jLabel19.setText("Procedimento");

        jLabel20.setText("Observações");

        jLabel21.setText("Tipo de Receita");

        comboEdReceita.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Colírio", "Pomada", "Colírio + Pomada", "Pterígio", "DCR" }));
        comboEdReceita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboEdReceitaActionPerformed(evt);
            }
        });

        jLabel22.setText("Tipo de Anestesia");

        comboEdAnest.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Local", "Geral", "Pequenas Cirurgias" }));

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnDeletar.setText("Deletar Paciente");
        btnDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(btnProcurar)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(18, 18, 18)
                        .addComponent(txtProcRg, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel13)
                        .addGap(18, 18, 18)
                        .addComponent(txtProcDataCirur, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(61, 61, 61))))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator1))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel21)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(comboEdReceita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                            .addComponent(jLabel20)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(txtEdObserv))
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                            .addComponent(jLabel19)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(txtEdProced))
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                            .addComponent(jLabel17)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(txtEdDataCirur, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(jLabel18)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(txtEdDataRetorno, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                            .addComponent(jLabel15)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtEdNome, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jLabel16)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(txtEdRg)))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel22)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(comboEdAnest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(btnDeletar, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnSalvar)
                                .addGap(46, 46, 46)))))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13)
                    .addComponent(txtProcRg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtProcDataCirur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnProcurar)
                .addGap(28, 28, 28)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(txtEdNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16)
                            .addComponent(txtEdRg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(txtEdDataCirur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18)
                            .addComponent(txtEdDataRetorno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19)
                            .addComponent(txtEdProced, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(txtEdObserv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel21))
                    .addComponent(comboEdReceita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(comboEdAnest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDeletar)
                    .addComponent(btnSalvar))
                .addGap(44, 44, 44))
        );

        jTabbedPane1.addTab("Editar Pacientes", jPanel4);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 494, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 512, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Visualizar Dados", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 499, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // Strings:
        String nome = txtNome.getText();
        String rg = txtRg.getText();
        String dataCirur = txtDataCirur.getText();
        String dataRetorno = txtDataRetorno.getText();
        String proced = txtProced.getText();
        String observ = txtObserv.getText();
        String receita = (String) comboReceita.getSelectedItem();
        String Anest = (String) comboAnest.getSelectedItem();
        
        String url = "jdbc:sqlserver://localhost:1433;"
                + "databaseName=testedb";
        String add = "INSERT INTO Table_1 (Nome,RG,DataCirurgia,DataRetorno,Procedimento,Observacoes,Receita,Anestesia) values ('"+nome+"','"+rg+"','"+dataCirur+"','"+dataRetorno+"','"+proced+"','"+observ+"','"+receita+"','"+Anest+"')";
        
//Conectar ao banco de dados:
        try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver").newInstance();
            Connection con = DriverManager.getConnection(url, "sa", "talala");
                  
        
            Statement stmt = con.createStatement();
            stmt.executeUpdate(add);
            JOptionPane.showMessageDialog(this, "Adicionado com Suceddo");
            txtNome.setText("");
            txtRg.setText("");
            txtProced.setText("");
            txtObserv.setText("");
                                
        } catch (SQLException ex) {
            System.out.println("SQLException: " + ex.getMessage());
            System.out.println("SQLState: "+ ex.getSQLState());
            System.out.println("VendorError: " + ex.getErrorCode());
    }catch (Exception e) {
            System.out.println("Näo foi possível conectar ao banco: " + e);
        }  
            
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListaActionPerformed
        //Strings Padrões
        String url = "jdbc:sqlserver://localhost:1433;"
                + "databaseName=testedb";
        String dataCirurGerar = txtDataCirurGerar.getText();
        String tipoAnest = (String) gerarAnest.getSelectedItem();
        //String selectNome = "SELECT Nome,RG,DataCirurgia,DataRetorno,Procedimento,Observacoes FROM Table_1 WHERE (DataCirurgia,Anestesia) = ('"+dataCirurGerar+"','"+tipoAnest+"')";
        String selectNome = "SELECT Nome,RG,DataCirurgia,DataRetorno,Procedimento,Observacoes FROM Table_1 WHERE DataCirurgia = '"+dataCirurGerar+"' AND Anestesia = '"+tipoAnest+"'";
        ArrayList listaNome = new ArrayList ();
        ArrayList listaRg = new ArrayList ();
        ArrayList listaDataCirur = new ArrayList ();
        ArrayList listaDataRetor = new ArrayList ();
        ArrayList listaProced = new ArrayList ();
        ArrayList listaObserv = new ArrayList ();
        
        
        //ArrayList listaReceita = new ArrayList();
        
       // Conectar ao Banco de Dados 
        try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver").newInstance();
            Connection con = DriverManager.getConnection(url, "sa", "talala");
            Statement stmt = con.createStatement (ResultSet.TYPE_SCROLL_INSENSITIVE, 
   ResultSet.CONCUR_READ_ONLY);      
            ResultSet r = stmt.executeQuery(selectNome);
            
        // Adicionar resultado a Lista e ao Array
            while (r.next()){
               listaNome.add(r.getString("Nome"));
               listaRg.add (r.getString("RG"));
               listaDataCirur.add(r.getString("DataCirurgia"));
               listaDataRetor.add(r.getString("DataRetorno"));
               listaProced.add(r.getString("Procedimento"));
               listaObserv.add(r.getString("Observacoes"));
               //listaReceita.add(r.getString("Receita"));
            }
            String[] arrayNome = (String[]) listaNome.toArray(new String[listaNome.size()]);
            String[] arrayRg = (String[]) listaRg.toArray(new String[listaRg.size()]);
            String[] arrayDataCirur = (String[]) listaDataCirur.toArray(new String[listaDataCirur.size()]);
            String[] arrayDataRetor = (String[]) listaDataRetor.toArray(new String[listaDataRetor.size()]);
            String[] arrayProced = (String[]) listaProced.toArray(new String[listaProced.size()]);
            String[] arrayObserv = (String[]) listaObserv.toArray(new String[listaObserv.size()]);

            
            // Gerar a Lista de Acordo com o n de pacientes
            int n = listaNome.size();
            int i;
            
            Document document = new Document(PageSize.A4); // Criando do document
            
            // Parametro das fontes
            Font fontCab = new Font(FontFamily.HELVETICA, 18);
            Font fontNome = new Font (FontFamily.HELVETICA, 16, Font.BOLD);
            Font fontTexto = new Font (FontFamily.HELVETICA,16);
            
            // Criação dos Parágrafos
            Paragraph cab = new Paragraph();
            Paragraph listaNomePaciente = new Paragraph ();
            Paragraph lista = new Paragraph();
                        
            try {
                String path = txtPatch.getText();
                String dataPdf = dataCirurGerar; //gerar uma string a partir da data da cirurgia
                dataPdf = dataPdf.replace("/", "_"); // transformar / em _ para não dar erro no nome do arquivo
                PdfWriter.getInstance(document, new FileOutputStream(path + "\\" + dataPdf + "_Lista_de_Cirurgia_" + tipoAnest + ".pdf"));
                document.open();
                cab.setAlignment(Element.ALIGN_CENTER);
                cab.setFont(fontCab);
                cab.setSpacingAfter(50);
                cab.add ("CIRURGIAS - PLÁSTICA OCULAR - " + tipoAnest + "\n \n" + dataCirurGerar + Chunk.NEWLINE + Chunk.NEWLINE);
                document.add(cab);
                
            // Parametros do Paragrafo da Lista
            lista.setAlignment(Element.ALIGN_CENTER);
            listaNomePaciente.setAlignment(Element.ALIGN_CENTER);
            lista.setFont(fontTexto);
            listaNomePaciente.setFont(fontNome);
            listaNomePaciente.setSpacingAfter(5);
           
            // Conteúdo e Adição dos Parágrafos da Lista
            for (i=0; i<n; i++){
                listaNomePaciente.add (i+1 + ") " + arrayNome[i] + "\t \t \t \t \t" + "RG: " + arrayRg[i]);
                if (arrayObserv[i].isEmpty()) {
                lista.add(arrayProced[i] + "\n" + Chunk.NEWLINE + Chunk.NEWLINE);
                
            } else {
                    lista.add(arrayProced[i] + " (" + arrayObserv[i] + ") \n" + Chunk.NEWLINE + Chunk.NEWLINE);
                }
            
                document.add (listaNomePaciente);
                document.add (lista);
                lista.clear();
                listaNomePaciente.clear();
                            }   
            
            
            } catch (DocumentException de) {
                System.err.println(de.getMessage());
            } catch (IOException ioe) {
                System.err.println(ioe.getMessage());
            }
            
            
            document.close();
            JOptionPane.showMessageDialog (null, "Lista de Cirurgias Gerada.");
         
                         
        } catch (SQLException ex) {
            System.out.println("SQLException: " + ex.getMessage());
            System.out.println("SQLState: "+ ex.getSQLState());
            System.out.println("VendorError: " + ex.getErrorCode());
    }catch (Exception e) {
            System.out.println("Näo foi possível conectar ao banco: " + e);
        }
        
    }//GEN-LAST:event_btnListaActionPerformed

    private void comboReceitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboReceitaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboReceitaActionPerformed


    private void btnReceitasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReceitasActionPerformed
               //Strings Padrões
        String url = "jdbc:sqlserver://localhost:1433;"
                + "databaseName=testedb";
        String dataCirurGerar = txtDataCirurGerar.getText();
        String tipoAnest = (String) gerarAnest.getSelectedItem();
        String selectNome = "SELECT Nome,RG,DataRetorno,Procedimento,Receita FROM Table_1 WHERE DataCirurgia = '"+dataCirurGerar+"' AND Anestesia = '"+tipoAnest+"'";
        ArrayList listaNome = new ArrayList ();
        ArrayList listaRg = new ArrayList ();
        ArrayList listaDataRetor = new ArrayList ();
        ArrayList listaProced = new ArrayList ();
        ArrayList listaReceita = new ArrayList ();
        
        // Parametro das fontes
        Font fontCab = new Font(FontFamily.HELVETICA, 16, Font.BOLD);
        Font fontNome = new Font (FontFamily.HELVETICA, 16, Font.BOLD);
        Font fontTexto = new Font (FontFamily.HELVETICA,14);
        Font fontRetorno = new Font (FontFamily.HELVETICA,14);
        
              
       // Conectar ao Banco de Dados 
        try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver").newInstance();
            Connection con = DriverManager.getConnection(url, "sa", "talala");
            Statement stmt = con.createStatement (ResultSet.TYPE_SCROLL_INSENSITIVE, 
   ResultSet.CONCUR_READ_ONLY);      
            ResultSet r = stmt.executeQuery(selectNome);
            
        // Adicionar resultado a Lista e ao Array
            while (r.next()){
               listaNome.add(r.getString("Nome"));
               listaRg.add (r.getString("RG"));
               listaDataRetor.add(r.getString("DataRetorno"));
               listaProced.add(r.getString("Procedimento"));
               listaReceita.add(r.getString("Receita"));
            }
            String[] arrayNome = (String[]) listaNome.toArray(new String[listaNome.size()]);
            String[] arrayRg = (String[]) listaRg.toArray(new String[listaRg.size()]);
            String[] arrayDataRetor = (String[]) listaDataRetor.toArray(new String[listaDataRetor.size()]);
            String[] arrayProced = (String[]) listaProced.toArray(new String[listaProced.size()]);
            String[] arrayReceita = (String[]) listaReceita.toArray(new String[listaReceita.size()]);
            
            // Gerar a Lista de Acordo com o n de pacientes
            int n = listaNome.size();
            int i;
            
            Document document = new Document(PageSize.A4); // Criando do document
            

                        
            try {
                String path = txtPatch.getText();
                String dataPdf = dataCirurGerar; //gerar uma string a partir da data da cirurgia
                dataPdf = dataPdf.replace("/", "_"); // transformar / em _ para não dar erro no nome do arquivo
                PdfWriter.getInstance(document, new FileOutputStream(path + "\\" + dataPdf + "_Receitas_" + tipoAnest + ".pdf"));
                document.open();
                               
            // Gerando Cabeçalho
                Image logo = Image.getInstance("D:\\Medicina\\UNESP\\Programa Plastica\\resources\\hcfmb_logo.jpg");
                logo.scalePercent(60);
                PdfPTable cabecalho = new PdfPTable (2);
                PdfPCell cell1 = new PdfPCell (logo);
                cell1.setBorderWidth(0f);
                cell1.setColspan(1);
                                
                PdfPCell cell2;
                Paragraph inst = new Paragraph ();
                inst.setFont(fontCab);
                inst.add("HOSPITAL DAS CLÍNICAS \n \n" + "FACULDADE DE MEDICINA DE BOTUCATU" + "\n" + "UNESP");
                inst.setAlignment(Element.ALIGN_CENTER);
                
                
                cell2 = new PdfPCell(inst);
                cell2.setColspan(2);
                cell2.setBorderWidth(0f);
                cell2.setVerticalAlignment(Element.ALIGN_MIDDLE);
                cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
                
                
                cabecalho.addCell (cell1);
                cabecalho.addCell(cell2);
                cabecalho.setWidthPercentage(100);
                cabecalho.setTotalWidth(new float [] {180f, 330f});

                            
            //Nome do Paciente
            Paragraph nomerg = new Paragraph ();
            nomerg.setFont(fontNome);
            nomerg.setAlignment(Element.ALIGN_CENTER);
            
            //Gerando Receita
            Paragraph colirio = new Paragraph ();
            Paragraph pomada = new Paragraph ();
            Paragraph dcr = new Paragraph ();
            Paragraph coliriopomada = new Paragraph ();
            Paragraph pterigio = new Paragraph ();
            Paragraph texto = new Paragraph ();
            
            texto.setFont(fontTexto);
            texto.setSpacingAfter(1f);
            texto.setAlignment(Element.ALIGN_LEFT);
            
            
            pomada.add ("USO EXTERNO\n \n" +
"1. NEPODEX POMADA\n" +
"APLICAR 01 CAMADA EM FERIDA OPERATORIA DE 6 EM 6 HORAS POR 15 DIAS\n" +
"\n \n \n" +
"USO INTERNO\n \n" +
"1. PARACETAMOL GOTAS\n" +
"TOMAR 40 GOTAS DE 6 EM 6 HORAS SE DOR.\n" +
"\n \n" +
"ORIENTAÇÕES GERAIS:\n" +
"- EVITAR SOL POR 06 MESES.\n" +
"- EVITAR ESFORÇO FÍSICO POR 15 DIAS.\n" +
"- COMPRESSAS FRIAS NOS PRIMEIROS DOIS DIAS POR, NO MÍNIMO, 10 VEZES AO DIA. APÓS OS DOIS PRIMEIROS DIAS, APLICAR COMPRESSAS MORNAS.");
            
            colirio.add ("USO EXTERNO\n \n" +
"1. NEPODEX COLÍRIO\n" +
"PINGAR 01 GOTA DE 6 EM 6 HORAS NO OLHO OPERADO POR 21 DIAS.\n \n \n" +
"USO INTERNO\n \n" +
"1. PARACETAMOL GOTAS\n" +
"TOMAR 40 GOTAS DE 6 EM 6 HORAS SE DOR.\n" +
"\n" +
"ORIENTAÇÕES GERAIS:\n" +
"- EVITAR SOL POR 06 MESES.\n" +
"- EVITAR ESFORÇO FÍSICO POR 01 MÊS.\n" +
"- COMPRESSAS FRIAS NOS PRIMEIROS DOIS DIAS POR, NO MÍNIMO, 10 VEZES AO DIA. APÓS OS DOIS PRIMEIROS DIAS, APLICAR COMPRESSAS MORNAS.");
            
            dcr.add ("USO EXTERNO\n \n" +
"1. NEPODEX POMADA\n" +
"APLICAR 01 CAMADA EM FERIDA OPERATORIA DE 6 EM 6 HORAS POR 15 DIAS\n \n" +
"2. NEPODEX COLÍRIO\n" +
"PINGAR 01 GOTA EM OLHO OPERADO DE 6 EM 6 HORAS POR 15 DIAS\n \n" +
"3. SORINE\n" +
"PINGAR UMA GOTA DE 4 EM 4 HORAS NA NARINA DO LADO OPERADO POR 7 DIAS\n \n" +
"4. SORO FISIOLÓGICO 0,9%\n" +
"LAVAR A NARINA OPERADA DE 4 EM 4 HORAS POR 15 DIAS.\n \n" +
"\n \n" +
"USO INTERNO\n \n" +
"1. PARACETAMOL GOTAS\n" +
"TOMAR 40 GOTAS DE 6 EM 6 HORAS SE DOR.\n \n" +
"\n" +
"ORIENTAÇÕES GERAIS:\n" +
"- EVITAR SOL POR 06 MESES.\n" +
"- EVITAR ESFORÇO FÍSICO POR 01 MÊS.\n" +
"- COMPRESSAS FRIAS NOS PRIMEIROS DOIS DIAS POR, NO MÍNIMO, 10 VEZES AO DIA. APÓS OS DOIS PRIMEIROS DIAS, APLICAR COMPRESSAS MORNAS.");
            
            coliriopomada.add ("USO EXTERNO\n \n" +
"1. NEPODEX POMADA\n" +
"APLICAR 01 CAMADA EM FERIDA OPERATORIA DE 6 EM 6 HORAS POR 15 DIAS\n \n" +
"2. NEPODEX COLÍRIO\n" +
"PINGAR 01 GOTA EM OLHO OPERADO DE 6 EM 6 HORAS POR 15 DIAS\n \n" +
"\n \n \n" +
"USO INTERNO\n \n" +
"1. PARACETAMOL GOTAS\n" +
"TOMAR 40 GOTAS DE 6 EM 6 HORAS SE DOR.\n" +
"\n \n \n" +
"ORIENTAÇÕES GERAIS:\n" +
"- EVITAR SOL POR 06 MESES.\n" +
"- EVITAR ESFORÇO FÍSICO POR 01 MÊS.\n" +
"- COMPRESSAS FRIAS NOS PRIMEIROS DOIS DIAS POR, NO MÍNIMO, 10 VEZES AO DIA. APÓS OS DOIS PRIMEIROS DIAS, APLICAR COMPRESSAS MORNAS.");
            
            pterigio.add ("USO EXTERNO\n \n" +
"1. NEPODEX COLÍRIO\n" +
"PINGAR 01 GOTA DE 6 EM 6 HORAS NO OLHO OPERADO POR 21 DIAS.\n \n \n" +
"USO INTERNO\n \n" +
"1. PARACETAMOL GOTAS\n" +
"TOMAR 40 GOTAS DE 6 EM 6 HORAS SE DOR.\n \n" +
"\n \n" +
"ORIENTAÇÕES GERAIS:\n" +
"- EVITAR SOL POR 06 MESES E USAR ÓCULOS ESCUROS.\n" +
"- EVITAR ESFORÇO FÍSICO POR 01 MÊS.\n" +
"- COMPRESSAS FRIAS NOS PRIMEIROS DOIS DIAS POR, NO MÍNIMO, 10 VEZES AO DIA.\n" +
"- É NORMAL O OLHO FICAR VERMELHO POR APROXIMADAMENTE 1 MÊS APÓS A CIRURGIA\n" +
"- É NORMAL SENTIR O OLHO ARRANHAR NOS PRIMERIOS DIAS APÓS A CIRURGIA E ATÉ TIRAR OS PONTOS.");
            
            // Gerando Retorno
            Paragraph retorno = new Paragraph ();
            retorno.setFont(fontRetorno);
            
            // Gerando Data do Dia
            Paragraph datadia = new Paragraph ();
            datadia.add ("\n" + dataCirurGerar);
            datadia.setAlignment(Element.ALIGN_RIGHT);
            datadia.setFont(fontRetorno);
            
                ArrayList arrayRetornoPO = new ArrayList ();
                
                for (i=0; i<n; i++) {
                org.joda.time.format.DateTimeFormatter arrayformatter = DateTimeFormat.forPattern("dd/MM/yyyy");
                DateTime jodaArrayCirur = arrayformatter.parseDateTime (dataCirurGerar);
                DateTime jodaArrayRetorno = arrayformatter.parseDateTime(arrayDataRetor[i]);
                int retornoPOerrado = Days.daysBetween(jodaArrayCirur, jodaArrayRetorno).getDays();
                arrayRetornoPO.add (retornoPOerrado + 1);
                } 
            
            
            
            // Gerando cada págima
                for (i=0; i<n; i++) {
                    nomerg.add ("\n RECEITUÁRIO" + "\n \n NOME: " + arrayNome[i] + "\t \t \t \t \t" + "RG: " + arrayRg[i] + Chunk.NEWLINE + Chunk.NEWLINE + Chunk.NEWLINE);
         org.joda.time.format.DateTimeFormatter arrayformatter = DateTimeFormat.forPattern("dd/MM/yyyy");
         DateTime jodaArrayCirur = arrayformatter.parseDateTime (dataCirurGerar);
         DateTime jodaArrayRetorno = arrayformatter.parseDateTime(arrayDataRetor[i]);
         int retornoPOerrado = Days.daysBetween(jodaArrayCirur, jodaArrayRetorno).getDays();
         arrayRetornoPO.add (retornoPOerrado + 1);
                
            /* Calculando a Diferença entre as Datas do PO
           String dataRetorPO = arrayDataRetor[0];
           org.joda.time.format.DateTimeFormatter formatter = DateTimeFormat.forPattern("dd/MM/yyyy");
           DateTime jodaDataCirur = formatter.parseDateTime(dataCirurGerar);
           DateTime jodaDataRetor = formatter.parseDateTime(dataRetorPO);
           int diaspo = Days.daysBetween(jodaDataCirur, jodaDataRetor).getDays();
           int diaspocerto = diaspo + 1;*/
                    
           
                    retorno.add ("\n \n \n RETORNO AO AMBULATORIO DE PLÁSTICA OCULAR - OFTALMOLOGIA (BLOCO 4) NO DIA " + arrayDataRetor[i] + " AS 07:00 HORAS" +
"\n" + arrayRetornoPO.get(i) + "º PO de "+ arrayProced[i]);
                    document.newPage();
                    document.add (cabecalho);
                    document.add (nomerg);
                
                    if (arrayReceita[i].equals("Pomada")) {
                        texto.add (pomada);
                        
                    } else if (arrayReceita[i].equals("Colírio")) {
                        texto.add (colirio);
                        
                    } else if (arrayReceita[i].equals("Colírio + Pomada")) {
                        texto.add (coliriopomada);
                        
                    } else if (arrayReceita[i].equals("DCR")){
                        texto.add (dcr);
                    } else if (arrayReceita[i].equals("Pterígio")) {
                        texto.add (pterigio);
                    }
                    document.add (texto);
                    document.add(retorno);
                    document.add (datadia);
                    
                    nomerg.clear();
                    retorno.clear();
                    texto.clear();
                  }
                    
                       
            
            } catch (DocumentException de) {
                System.err.println(de.getMessage());
            } catch (IOException ioe) {
                System.err.println(ioe.getMessage());
            }
            
            
            document.close();
            JOptionPane.showMessageDialog (null, "Receitas Geradas");
         
                         
        } catch (SQLException ex) {
            System.out.println("SQLException: " + ex.getMessage());
            System.out.println("SQLState: "+ ex.getSQLState());
            System.out.println("VendorError: " + ex.getErrorCode());
    }catch (Exception e) {
            System.out.println("Näo foi possível conectar ao banco: " + e);
        }
    }//GEN-LAST:event_btnReceitasActionPerformed

    private void btnAtestadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtestadosActionPerformed
             //Strings Padrões
        String url = "jdbc:sqlserver://localhost:1433;"
                + "databaseName=testedb";
        String dataCirurGerar = txtDataCirurGerar.getText();
        String tipoAnest = (String) gerarAnest.getSelectedItem();
        String tempoAtestado = txtTempoAtestado.getText();
        String selectNome = "SELECT Nome FROM Table_1 WHERE DataCirurgia = '"+dataCirurGerar+"' AND Anestesia = '"+tipoAnest+"'";
        ArrayList listaNome = new ArrayList ();

        
        // Parametro das fontes
        Font fontCab = new Font(FontFamily.HELVETICA, 16, Font.BOLD);
        Font fontTitulo = new Font (FontFamily.HELVETICA, 16, Font.BOLD);
        Font fontTexto = new Font (FontFamily.HELVETICA,14);
        Font fontRetorno = new Font (FontFamily.HELVETICA,14);
              
       // Conectar ao Banco de Dados 
        try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver").newInstance();
            Connection con = DriverManager.getConnection(url, "sa", "talala");
            Statement stmt = con.createStatement (ResultSet.TYPE_SCROLL_INSENSITIVE, 
   ResultSet.CONCUR_READ_ONLY);      
            ResultSet r = stmt.executeQuery(selectNome);
            
        // Adicionar resultado a Lista e ao Array
            while (r.next()){
               listaNome.add(r.getString("Nome"));

            }
            String[] arrayNome = (String[]) listaNome.toArray(new String[listaNome.size()]);

            
            // Gerar a Lista de Acordo com o n de pacientes
            int n = listaNome.size();
            int i;
            
            Document document = new Document(PageSize.A4); // Criando do document
            
                        
            try {
                String path = txtPatch.getText();
                String dataPdf = dataCirurGerar; //gerar uma string a partir da data da cirurgia
                dataPdf = dataPdf.replace("/", "_"); // transformar / em _ para não dar erro no nome do arquivo
                PdfWriter.getInstance(document, new FileOutputStream(path + "\\" + dataPdf + "_Atestados_" + tipoAnest + ".pdf"));
                document.open();
                               
            // Gerando Cabeçalho
                Image logo = Image.getInstance("D:\\Medicina\\UNESP\\Programa Plastica\\resources\\hcfmb_logo.jpg");
                logo.scalePercent(60);
                PdfPTable cabecalho = new PdfPTable (2);
                PdfPCell cell1 = new PdfPCell (logo);
                cell1.setBorderWidth(0f);
                cell1.setColspan(1);
                                
                PdfPCell cell2;
                Paragraph inst = new Paragraph ();
                inst.setFont(fontCab);
                inst.add("HOSPITAL DAS CLÍNICAS \n \n" + "FACULDADE DE MEDICINA DE BOTUCATU" + "\n" + "UNESP");
                inst.setAlignment(Element.ALIGN_CENTER);
                
                
                cell2 = new PdfPCell(inst);
                cell2.setColspan(2);
                cell2.setBorderWidth(0f);
                cell2.setVerticalAlignment(Element.ALIGN_MIDDLE);
                cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
                
                
                cabecalho.addCell (cell1);
                cabecalho.addCell(cell2);
                cabecalho.setWidthPercentage(100);
                cabecalho.setTotalWidth(new float [] {180f, 330f});

                            
            //Gerando Atestado
            Paragraph atestado = new Paragraph ();
            Paragraph titulo = new Paragraph ();
            titulo.setFont(fontTitulo);
            titulo.add("\n\n\nATESTADO\n\n\n\n\n\n ");
            titulo.setAlignment(Element.ALIGN_CENTER);
            
            atestado.setFont(fontTexto);
            atestado.setLeading(28);
            atestado.setAlignment(Element.ALIGN_JUSTIFIED);
            
            

                        
            // Gerando Data do Dia
            Paragraph datadia = new Paragraph ();
            datadia.add ("\n\n\n\n\n\n\n\n\n\n\n\n" + "BOTUCATU, " + dataCirurGerar);
            datadia.setAlignment(Element.ALIGN_RIGHT);
            datadia.setFont(fontRetorno);
            
            
            

            // Gerando cada págima
                for (i=0; i<n; i++) {
                    
                    atestado.add ("ATESTO PARA OS DEVIDOS FINS QUE O(A) PACIENTE " + arrayNome[i] + " ESTEVE PRESENTE NESTE SERVIÇO NO DIA " + dataCirurGerar +
                            " PARA REALIZAÇÃO DE CIRURGIA OFTALMOLÓGICA, DEVENDO FICAR " + tempoAtestado + " DIAS AFASTADO(A) DE SUAS ATIVIDADES LABORAIS, A PARTIR DO DIA DE HOJE.");
             
                    document.newPage();
                    document.add (cabecalho);
                    document.add (titulo);
                    document.add (atestado);
                
                    document.add (datadia);
                    
                    atestado.clear();
                }
                    
                       
            
            } catch (DocumentException de) {
                System.err.println(de.getMessage());
            } catch (IOException ioe) {
                System.err.println(ioe.getMessage());
            }
            
            
            document.close();
            JOptionPane.showMessageDialog (null, "Atestados Gerados");
         
                         
        } catch (SQLException ex) {
            System.out.println("SQLException: " + ex.getMessage());
            System.out.println("SQLState: "+ ex.getSQLState());
            System.out.println("VendorError: " + ex.getErrorCode());
    }catch (Exception e) {
            System.out.println("Näo foi possível conectar ao banco: " + e);
        }  
        
        
        
    }//GEN-LAST:event_btnAtestadosActionPerformed

    private void txtTempoAtestadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTempoAtestadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTempoAtestadoActionPerformed

    private void btnProcurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcurarActionPerformed
         // Strings:
        String procrg = txtProcRg.getText();
        String procdata = txtProcDataCirur.getText();
        
        String url = "jdbc:sqlserver://localhost:1433;"
                + "databaseName=testedb";
        String search = "SELECT Nome,RG,DataCirurgia,DataRetorno,Procedimento,Observacoes,Receita,Anestesia FROM Table_1 WHERE DataCirurgia = '"+procdata+"' AND RG = '"+procrg+"'"; 
        
//Conectar ao banco de dados:
        try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver").newInstance();
            Connection con = DriverManager.getConnection(url, "sa", "talala");
            Statement stmt = con.createStatement ();
            ResultSet r;
            r = stmt.executeQuery(search);
            
        while (r.next()) {
        String nome = r.getString("Nome");
        String rg = r.getString("RG");
        String dataCirur = r.getString("DataCirurgia");
        String dataRetorno = r.getString("DataRetorno");
        String proced = r.getString("Procedimento");
        String observ = r.getString("Observacoes");
        String receita = r.getString("Receita");
        String Anest = r.getString("Anestesia"); 
        
        txtEdNome.setText(nome);
            txtEdRg.setText(rg);
            txtEdProced.setText(proced);
            txtEdObserv.setText(observ);
            txtEdDataCirur.setText(dataCirur);
            txtEdDataRetorno.setText(dataRetorno);
            
            if (Anest.equals("Local")){
            comboEdAnest.setSelectedIndex(0);
            } else if (Anest.equals("Geral")) {
                comboEdAnest.setSelectedIndex(1);
            } else if (Anest.equals("Pequenas Cirurgias")) {
                comboEdAnest.setSelectedIndex(2);
            }
               
            if (receita.equals("Colírio")) {
                comboEdReceita.setSelectedIndex(0);
            } else if (receita.equals("Pomada")) {
                comboEdReceita.setSelectedIndex(1);
            } else if (receita.equals("Colírio + Pomada")) {
                comboEdReceita.setSelectedIndex(2);
            } else if (receita.equals("Pterígio")) {
                comboEdReceita.setSelectedIndex(3);
            } else if (receita.equals("DCR")) {
                comboEdReceita.setSelectedIndex(4);
            }
            }
                    
        } catch (SQLException ex) {
            System.out.println("SQLException: " + ex.getMessage());
            System.out.println("SQLState: "+ ex.getSQLState());
            System.out.println("VendorError: " + ex.getErrorCode());
    }catch (Exception e) {
            System.out.println("Näo foi possível conectar ao banco: " + e);
        }  
       
    }//GEN-LAST:event_btnProcurarActionPerformed

    private void comboEdReceitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboEdReceitaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboEdReceitaActionPerformed

    private void txtEdNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEdNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEdNomeActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
// Strings:
        String nome = txtEdNome.getText();
        String rg = txtEdRg.getText();
        String dataCirur = txtEdDataCirur.getText();
        String dataRetorno = txtEdDataRetorno.getText();
        String proced = txtEdProced.getText();
        String observ = txtEdObserv.getText();
        String receita = (String) comboEdReceita.getSelectedItem();
        String Anest = (String) comboEdAnest.getSelectedItem();
        
        String url = "jdbc:sqlserver://localhost:1433;"
                + "databaseName=testedb";
        String update = "UPDATE Table_1 SET Nome = ?, RG = ?, DataCirurgia = ?, DataRetorno = ?, Procedimento = ?, Observacoes = ?, Receita = ?, Anestesia = ? WHERE DataCirurgia = '"+dataCirur+"' AND RG = '"+rg+"'";
        
//Conectar ao banco de dados:
        try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver").newInstance();
            Connection con = DriverManager.getConnection(url, "sa", "talala");
        
            PreparedStatement ps = con.prepareStatement(update);
            ps.setString(1, nome);
            ps.setString(2, rg);
            ps.setString(3, dataCirur);
            ps.setString(4, dataRetorno);
            ps.setString(5, proced);
            ps.setString (6, observ);
            ps.setString(7, receita);
            ps.setString(8, Anest);
            
            System.out.println(update);
            ps.executeUpdate();
            ps.close();
            
            JOptionPane.showMessageDialog(this, "Atualizado com Sucesso");
            
            txtEdNome.setText("");
            txtEdRg.setText("");
            txtEdProced.setText("");
            txtEdObserv.setText("");
            txtEdDataCirur.setText("");
            txtEdDataRetorno.setText("");
            
        } catch (SQLException ex) {
            System.out.println("SQLException: " + ex.getMessage());
            System.out.println("SQLState: "+ ex.getSQLState());
            System.out.println("VendorError: " + ex.getErrorCode());
    }catch (Exception e) {
            System.out.println("Näo foi possível conectar ao banco: " + e);
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletarActionPerformed
        String nome = txtEdNome.getText();
        String rg = txtEdRg.getText();
        String url = "jdbc:sqlserver://localhost:1433;"
                + "databaseName=testedb";
        String deletar = "DELETE FROM Table_1 WHERE Nome = ? AND RG = ?";
        
        //Conectar ao banco de dados:
        try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver").newInstance();
            Connection con = DriverManager.getConnection(url, "sa", "talala");
        
            PreparedStatement ps = con.prepareStatement(deletar);
            ps.setString(1, nome);
            ps.setString(2, rg);

            System.out.println(deletar);
            ps.executeUpdate();
            ps.close();
            
            JOptionPane.showMessageDialog(this, "Paciente Apago do Banco de Dados");
            
            txtEdNome.setText("");
            txtEdRg.setText("");
            txtEdProced.setText("");
            txtEdObserv.setText("");
            txtEdDataCirur.setText("");
            txtEdDataRetorno.setText("");
            
        } catch (SQLException ex) {
            System.out.println("SQLException: " + ex.getMessage());
            System.out.println("SQLState: "+ ex.getSQLState());
            System.out.println("VendorError: " + ex.getErrorCode());
    }catch (Exception e) {
            System.out.println("Näo foi possível conectar ao banco: " + e);
        }
    }//GEN-LAST:event_btnDeletarActionPerformed

    private void btnPatchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPatchActionPerformed
    JFileChooser chooser;
    chooser = new JFileChooser(); 
    chooser.setCurrentDirectory(new java.io.File("."));
    chooser.setDialogTitle("Selecione a Pasta de Destino");
    chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
    chooser.setAcceptAllFileFilterUsed(false);

    if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) { 
      txtPatch.setText("" +  chooser.getSelectedFile());
      }
    else {
      txtPatch.setText(null);
      }
    }//GEN-LAST:event_btnPatchActionPerformed

    private void txtPatchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatchActionPerformed
    File home = FileSystemView.getFileSystemView().getHomeDirectory();
    txtPatch.setText(home.getAbsolutePath());
    }//GEN-LAST:event_txtPatchActionPerformed

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
    File home = FileSystemView.getFileSystemView().getHomeDirectory();
    txtPatch.setText(home.getAbsolutePath());
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaSql.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaSql.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaSql.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaSql.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaSql().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnAtestados;
    private javax.swing.JButton btnDeletar;
    private javax.swing.JButton btnLista;
    private javax.swing.JButton btnPatch;
    private javax.swing.JButton btnProcurar;
    private javax.swing.JButton btnReceitas;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox comboAnest;
    private javax.swing.JComboBox comboEdAnest;
    private javax.swing.JComboBox comboEdReceita;
    private javax.swing.JComboBox comboReceita;
    private javax.swing.JComboBox gerarAnest;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField txtDataCirur;
    private javax.swing.JTextField txtDataCirurGerar;
    private javax.swing.JTextField txtDataRetorno;
    private javax.swing.JTextField txtEdDataCirur;
    private javax.swing.JTextField txtEdDataRetorno;
    private javax.swing.JTextField txtEdNome;
    private javax.swing.JTextField txtEdObserv;
    private javax.swing.JTextField txtEdProced;
    private javax.swing.JTextField txtEdRg;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtObserv;
    private javax.swing.JTextField txtPatch;
    private javax.swing.JTextField txtProcDataCirur;
    private javax.swing.JTextField txtProcRg;
    private javax.swing.JTextField txtProced;
    private javax.swing.JTextField txtRg;
    private javax.swing.JTextField txtTempoAtestado;
    // End of variables declaration//GEN-END:variables
}
